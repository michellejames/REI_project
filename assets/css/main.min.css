a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font-size:100%;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}body{line-height:1}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:"";content:none}table{border-collapse:collapse;border-spacing:0}.row{padding-top:20%;padding-bottom:10%;padding-left:20%}.diamond{position:relative;width:20%;height:0;padding-bottom:20%;background:red;margin-right:-100%;float:left;overflow:hidden;transform:rotate(45deg)}.diamond h4{transform:rotate(-45deg)}.diamond1,.diamond6{margin-top:-15%;margin-left:15%}.diamond2,.diamond7{background:blue}.diamond3,.diamond8{background:#ff0;margin-left:30%}.diamond4{background:purple;margin-top:-15%;margin-left:-15%}.diamond9{background:purple;margin-left:60%}.diamond5,.diamond10{background:purple;margin-top:-15%;margin-left:45%}@font-face{font-family:ziden;src:url(../../assets/fonts/AkzidenzGroteskBE-MdCn.otf)}@font-face{font-family:GearedSlab;src:url(../../assets/fonts/GearedSlab.ttf)}*{box-sizing:border-box}body,html{width:100%;height:100%;background:grey}.header__bg{position:relative;background-image:url(../../assets/img/snow__bg.JPG);background-repeat:no-repeat;background-size:cover;height:550px}.subnav__nav{display:-ms-flexbox;display:flex}.subnav__nav li{display:none}.navbar{display:-ms-flexbox;display:flex}.nabar__chart,.nabvar__main__nav,.navbar__search{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.nabvar__main__nav__shop_hover{display:none}.rei__logo{background-image:url(../../assets/img/rei-logo.png);background-repeat:no-repeat;width:100vh;height:40vh}.squares{width:100%;height:0;position:relative;margin-left:10%;padding-top:59%}.square{color:#fff;font-family:ziden;text-transform:uppercase;position:absolute;width:31.25%;height:0;padding-bottom:31.25%;background:hsla(240,0%,46%,.6);border:5px solid #ecebed}.square h3.shop{font-size:34px}.square h2,.square h3.shop{transform:rotate(-45deg) translateY(100%)}.square h2{font-size:44px}.square.square1{transform:rotate(45deg) translateY(0)}.square.square2{transform:rotate(45deg) translateY(-106%)}.square.square3{transform:rotate(45deg) translateX(106%) translateY(0)}.square.square4{transform:rotate(45deg) translateX(106%) translateY(-106%)}.members__part1,.members__part2 h2{color:#c72026;font-family:GearedSlab}.members__part2 h2{font-size:50px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
